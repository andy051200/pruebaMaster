

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Aug 30 19:21:34 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0000                     	;# 
   284  0001                     	;# 
   285  0002                     	;# 
   286  0003                     	;# 
   287  0004                     	;# 
   288  0005                     	;# 
   289  0006                     	;# 
   290  0007                     	;# 
   291  0008                     	;# 
   292  0009                     	;# 
   293  000A                     	;# 
   294  000B                     	;# 
   295  000C                     	;# 
   296  000D                     	;# 
   297  000E                     	;# 
   298  000E                     	;# 
   299  000F                     	;# 
   300  0010                     	;# 
   301  0011                     	;# 
   302  0012                     	;# 
   303  0013                     	;# 
   304  0014                     	;# 
   305  0015                     	;# 
   306  0015                     	;# 
   307  0016                     	;# 
   308  0017                     	;# 
   309  0018                     	;# 
   310  0019                     	;# 
   311  001A                     	;# 
   312  001B                     	;# 
   313  001B                     	;# 
   314  001C                     	;# 
   315  001D                     	;# 
   316  001E                     	;# 
   317  001F                     	;# 
   318  0081                     	;# 
   319  0085                     	;# 
   320  0086                     	;# 
   321  0087                     	;# 
   322  0088                     	;# 
   323  0089                     	;# 
   324  008C                     	;# 
   325  008D                     	;# 
   326  008E                     	;# 
   327  008F                     	;# 
   328  0090                     	;# 
   329  0091                     	;# 
   330  0092                     	;# 
   331  0093                     	;# 
   332  0093                     	;# 
   333  0093                     	;# 
   334  0094                     	;# 
   335  0095                     	;# 
   336  0096                     	;# 
   337  0097                     	;# 
   338  0098                     	;# 
   339  0099                     	;# 
   340  009A                     	;# 
   341  009B                     	;# 
   342  009C                     	;# 
   343  009D                     	;# 
   344  009E                     	;# 
   345  009F                     	;# 
   346  0105                     	;# 
   347  0107                     	;# 
   348  0108                     	;# 
   349  0109                     	;# 
   350  010C                     	;# 
   351  010C                     	;# 
   352  010D                     	;# 
   353  010E                     	;# 
   354  010F                     	;# 
   355  0185                     	;# 
   356  0187                     	;# 
   357  0188                     	;# 
   358  0189                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361  001F                     _ADCON0bits	set	31
   362  0009                     _PORTE	set	9
   363  0008                     _PORTD	set	8
   364  0006                     _PORTBbits	set	6
   365  0006                     _PORTB	set	6
   366  0001                     _TMR0	set	1
   367  0009                     _PORTEbits	set	9
   368  000B                     _INTCONbits	set	11
   369  005A                     _T0IF	set	90
   370  008F                     _OSCCONbits	set	143
   371  009F                     _ADCON1bits	set	159
   372  0096                     _IOCBbits	set	150
   373  0095                     _WPUBbits	set	149
   374  0081                     _OPTION_REGbits	set	129
   375  0089                     _TRISEbits	set	137
   376  0088                     _TRISD	set	136
   377  0086                     _TRISBbits	set	134
   378  0189                     _ANSELH	set	393
   379  0188                     _ANSEL	set	392
   380                           
   381                           	psect	cinit
   382  0011                     start_initialization:	
   383                           ; #config settings
   384                           
   385  0011                     __initialization:
   386                           
   387                           ; Clear objects allocated to COMMON
   388  0011  01F9               	clrf	__pbssCOMMON& (0+127)
   389  0012  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   390  0013  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   391  0014  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   392  0015                     end_of_initialization:	
   393                           ;End of C runtime variable initialization code
   394                           
   395  0015                     __end_of__initialization:
   396  0015  0183               	clrf	3
   397  0016  120A  118A  28CF   	ljmp	_main	;jump to C main() function
   398                           
   399                           	psect	bssCOMMON
   400  0079                     __pbssCOMMON:
   401  0079                     _botonazos:
   402  0079                     	ds	1
   403  007A                     _antirrebote:
   404  007A                     	ds	1
   405  007B                     _cuenta_total:
   406  007B                     	ds	1
   407  007C                     _cuenta:
   408  007C                     	ds	1
   409                           
   410                           	psect	cstackCOMMON
   411  0070                     __pcstackCOMMON:
   412  0070                     ?_setup:
   413  0070                     ?_osc_config:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_isr:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ??_isr:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_main:	
   423                           ; 1 bytes @ 0x0
   424                           
   425                           
   426                           ; 1 bytes @ 0x0
   427  0070                     	ds	5
   428  0075                     ??_osc_config:
   429                           
   430                           ; 1 bytes @ 0x5
   431  0075                     	ds	2
   432  0077                     osc_config@freq:
   433                           
   434                           ; 1 bytes @ 0x7
   435  0077                     	ds	1
   436  0078                     ??_setup:
   437  0078                     ??_main:	
   438                           ; 1 bytes @ 0x8
   439                           
   440                           
   441                           ; 1 bytes @ 0x8
   442  0078                     	ds	1
   443                           
   444                           	psect	maintext
   445  00CF                     __pmaintext:	
   446 ;;
   447 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   448 ;;
   449 ;; *************** function _main *****************
   450 ;; Defined at:
   451 ;;		line 100 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMotores.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : B00/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   465 ;;      Params:         0       0       0       0       0
   466 ;;      Locals:         0       0       0       0       0
   467 ;;      Temps:          1       0       0       0       0
   468 ;;      Totals:         1       0       0       0       0
   469 ;;Total ram usage:        1 bytes
   470 ;; Hardware stack levels required when called: 3
   471 ;; This function calls:
   472 ;;		_setup
   473 ;; This function is called by:
   474 ;;		Startup code after reset
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478                           
   479                           ;psect for function _main
   480  00CF                     _main:
   481  00CF                     l784:	
   482                           ;incstack = 0
   483                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   484                           
   485                           
   486                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 102:     setup();
   487  00CF  120A  118A  20A5  120A  118A  	fcall	_setup
   488  00D4                     l786:
   489                           
   490                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 105:     {;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores
      +                          .X/mainPruebaMotores.c: 107:         if (antirrebote==1 && PORTBbits.RB1==0 )
   491  00D4  037A               	decf	_antirrebote,w
   492  00D5  1D03               	btfss	3,2
   493  00D6  28D8               	goto	u51
   494  00D7  28D9               	goto	u50
   495  00D8                     u51:
   496  00D8  28EB               	goto	l798
   497  00D9                     u50:
   498  00D9                     l788:
   499  00D9  1283               	bcf	3,5	;RP0=0, select bank0
   500  00DA  1303               	bcf	3,6	;RP1=0, select bank0
   501  00DB  1886               	btfsc	6,1	;volatile
   502  00DC  28DE               	goto	u61
   503  00DD  28DF               	goto	u60
   504  00DE                     u61:
   505  00DE  28EB               	goto	l798
   506  00DF                     u60:
   507  00DF                     l790:
   508                           
   509                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 108:         {;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_mot
      +                          ores.X/mainPruebaMotores.c: 109:             botonazos++;
   510  00DF  3001               	movlw	1
   511  00E0  00F8               	movwf	??_main
   512  00E1  0878               	movf	??_main,w
   513  00E2  07F9               	addwf	_botonazos,f
   514  00E3                     l792:
   515                           
   516                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 110:             antirrebote=0;
   517  00E3  01FA               	clrf	_antirrebote
   518  00E4                     l794:
   519                           
   520                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 111:             if(botonazos>2)
   521  00E4  3003               	movlw	3
   522  00E5  0279               	subwf	_botonazos,w
   523  00E6  1C03               	skipc
   524  00E7  28E9               	goto	u71
   525  00E8  28EA               	goto	u70
   526  00E9                     u71:
   527  00E9  28EB               	goto	l798
   528  00EA                     u70:
   529  00EA                     l796:
   530                           
   531                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 112:                 botonazos=0;
   532  00EA  01F9               	clrf	_botonazos
   533  00EB                     l798:
   534                           
   535                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 115:         PORTD=botonazos;
   536  00EB  0879               	movf	_botonazos,w
   537  00EC  1283               	bcf	3,5	;RP0=0, select bank0
   538  00ED  1303               	bcf	3,6	;RP1=0, select bank0
   539  00EE  0088               	movwf	8	;volatile
   540  00EF  28D4               	goto	l786
   541  00F0  120A  118A  280E   	ljmp	start
   542  00F3                     __end_of_main:
   543                           
   544                           	psect	text1
   545  00A5                     __ptext1:	
   546 ;; *************** function _setup *****************
   547 ;; Defined at:
   548 ;;		line 124 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMotores.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;		None
   551 ;; Auto vars:     Size  Location     Type
   552 ;;		None
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   562 ;;      Params:         0       0       0       0       0
   563 ;;      Locals:         0       0       0       0       0
   564 ;;      Temps:          0       0       0       0       0
   565 ;;      Totals:         0       0       0       0       0
   566 ;;Total ram usage:        0 bytes
   567 ;; Hardware stack levels used: 1
   568 ;; Hardware stack levels required when called: 2
   569 ;; This function calls:
   570 ;;		_osc_config
   571 ;; This function is called by:
   572 ;;		_main
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           
   577                           ;psect for function _setup
   578  00A5                     _setup:
   579  00A5                     l710:	
   580                           ;incstack = 0
   581                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   582                           
   583                           
   584                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 127:     ANSEL=0;
   585  00A5  1683               	bsf	3,5	;RP0=1, select bank3
   586  00A6  1703               	bsf	3,6	;RP1=1, select bank3
   587  00A7  0188               	clrf	8	;volatile
   588                           
   589                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 128:     ANSELH=0;
   590  00A8  0189               	clrf	9	;volatile
   591  00A9                     l712:
   592                           
   593                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 130:     TRISBbits.TRISB1=1;
   594  00A9  1683               	bsf	3,5	;RP0=1, select bank1
   595  00AA  1303               	bcf	3,6	;RP1=0, select bank1
   596  00AB  1486               	bsf	6,1	;volatile
   597                           
   598                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 131:     TRISD=0;
   599  00AC  0188               	clrf	8	;volatile
   600  00AD                     l714:
   601                           
   602                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 132:     TRISEbits.TRISE0=0;
   603  00AD  1009               	bcf	9,0	;volatile
   604                           
   605                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 135:     PORTB=0;
   606  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   607  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   608  00B0  0186               	clrf	6	;volatile
   609                           
   610                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 136:     PORTD=0;
   611  00B1  0188               	clrf	8	;volatile
   612                           
   613                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 137:     PORTE=0;
   614  00B2  0189               	clrf	9	;volatile
   615  00B3                     l716:
   616                           
   617                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 139:     osc_config(4);
   618  00B3  3004               	movlw	4
   619  00B4  120A  118A  206E  120A  118A  	fcall	_osc_config
   620  00B9                     l718:
   621                           
   622                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 141:     OPTION_REGbits.T0CS = 0;
   623  00B9  1683               	bsf	3,5	;RP0=1, select bank1
   624  00BA  1303               	bcf	3,6	;RP1=0, select bank1
   625  00BB  1281               	bcf	1,5	;volatile
   626  00BC                     l720:
   627                           
   628                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 142:     OPTION_REGbits.PSA = 0;
   629  00BC  1181               	bcf	1,3	;volatile
   630  00BD                     l722:
   631                           
   632                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 143:     OPTION_REGbits.PS = 0b111;
   633  00BD  3007               	movlw	7
   634  00BE  0481               	iorwf	1,f	;volatile
   635  00BF                     l724:
   636                           
   637                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 144:     TMR0 = 78;
   638  00BF  304E               	movlw	78
   639  00C0  1283               	bcf	3,5	;RP0=0, select bank0
   640  00C1  1303               	bcf	3,6	;RP1=0, select bank0
   641  00C2  0081               	movwf	1	;volatile
   642  00C3                     l726:
   643                           
   644                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 146:     OPTION_REGbits.nRBPU=0;
   645  00C3  1683               	bsf	3,5	;RP0=1, select bank1
   646  00C4  1303               	bcf	3,6	;RP1=0, select bank1
   647  00C5  1381               	bcf	1,7	;volatile
   648  00C6                     l728:
   649                           
   650                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 147:     WPUBbits.WPUB1=1;
   651  00C6  1495               	bsf	21,1	;volatile
   652  00C7                     l730:
   653                           
   654                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 150:     INTCONbits.GIE=1;
   655  00C7  178B               	bsf	11,7	;volatile
   656  00C8                     l732:
   657                           
   658                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 151:     INTCONbits.PEIE = 1;
   659  00C8  170B               	bsf	11,6	;volatile
   660  00C9                     l734:
   661                           
   662                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 152:     INTCONbits.T0IE=1;
   663  00C9  168B               	bsf	11,5	;volatile
   664  00CA                     l736:
   665                           
   666                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 153:     INTCONbits.T0IF=0;
   667  00CA  110B               	bcf	11,2	;volatile
   668  00CB                     l738:
   669                           
   670                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 154:     INTCONbits.RBIE=1;
   671  00CB  158B               	bsf	11,3	;volatile
   672  00CC                     l740:
   673                           
   674                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 155:     INTCONbits.RBIF=0;
   675  00CC  100B               	bcf	11,0	;volatile
   676  00CD                     l742:
   677                           
   678                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 156:     IOCBbits.IOCB1=1;
   679  00CD  1496               	bsf	22,1	;volatile
   680  00CE                     l72:
   681  00CE  0008               	return
   682  00CF                     __end_of_setup:
   683                           
   684                           	psect	text2
   685  006E                     __ptext2:	
   686 ;; *************** function _osc_config *****************
   687 ;; Defined at:
   688 ;;		line 16 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/Osc_config.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;  freq            1    wreg     unsigned char 
   691 ;; Auto vars:     Size  Location     Type
   692 ;;  freq            1    7[COMMON] unsigned char 
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   702 ;;      Params:         0       0       0       0       0
   703 ;;      Locals:         1       0       0       0       0
   704 ;;      Temps:          2       0       0       0       0
   705 ;;      Totals:         3       0       0       0       0
   706 ;;Total ram usage:        3 bytes
   707 ;; Hardware stack levels used: 1
   708 ;; Hardware stack levels required when called: 1
   709 ;; This function calls:
   710 ;;		Nothing
   711 ;; This function is called by:
   712 ;;		_setup
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           
   717                           ;psect for function _osc_config
   718  006E                     _osc_config:
   719                           
   720                           ;incstack = 0
   721                           ; Regs used in _osc_config: [wreg-fsr0h+status,2+status,0]
   722                           ;osc_config@freq stored from wreg
   723  006E  00F7               	movwf	osc_config@freq
   724  006F                     l684:
   725                           
   726                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/Osc_config.c: 
      +                          16: void osc_config(uint8_t freq);C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaste
      +                          r/prueba_motores.X/Osc_config.c: 17: {;C:/Users/Andy Bonilla/Documents/GitHub/ED2/prueba
      +                          Master/prueba_motores.X/Osc_config.c: 18:     switch(freq)
   727  006F  288E               	goto	l704
   728  0070                     l686:
   729                           
   730                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/Osc_config.c: 
      +                          21:             OSCCONbits.IRCF=0b100;
   731  0070  1683               	bsf	3,5	;RP0=1, select bank1
   732  0071  1303               	bcf	3,6	;RP1=0, select bank1
   733  0072  080F               	movf	15,w	;volatile
   734  0073  398F               	andlw	-113
   735  0074  3840               	iorlw	64
   736  0075  008F               	movwf	15	;volatile
   737  0076                     l688:
   738                           
   739                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/Osc_config.c: 
      +                          22:             OSCCONbits.SCS=1;
   740  0076  140F               	bsf	15,0	;volatile
   741                           
   742                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/Osc_config.c: 
      +                          23:             break;
   743  0077  28A4               	goto	l92
   744  0078                     l690:
   745                           
   746                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/Osc_config.c: 
      +                          26:             OSCCONbits.IRCF=0b101;
   747  0078  1683               	bsf	3,5	;RP0=1, select bank1
   748  0079  1303               	bcf	3,6	;RP1=0, select bank1
   749  007A  080F               	movf	15,w	;volatile
   750  007B  398F               	andlw	-113
   751  007C  3850               	iorlw	80
   752  007D  008F               	movwf	15	;volatile
   753  007E                     l692:
   754                           
   755                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/Osc_config.c: 
      +                          27:             OSCCONbits.SCS=1;
   756  007E  140F               	bsf	15,0	;volatile
   757                           
   758                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/Osc_config.c: 
      +                          28:             break;
   759  007F  28A4               	goto	l92
   760  0080                     l694:
   761                           
   762                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/Osc_config.c: 
      +                          31:             OSCCONbits.IRCF=0b110;
   763  0080  1683               	bsf	3,5	;RP0=1, select bank1
   764  0081  1303               	bcf	3,6	;RP1=0, select bank1
   765  0082  080F               	movf	15,w	;volatile
   766  0083  398F               	andlw	-113
   767  0084  3860               	iorlw	96
   768  0085  008F               	movwf	15	;volatile
   769  0086                     l696:
   770                           
   771                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/Osc_config.c: 
      +                          32:             OSCCONbits.SCS=1;
   772  0086  140F               	bsf	15,0	;volatile
   773                           
   774                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/Osc_config.c: 
      +                          33:             break;
   775  0087  28A4               	goto	l92
   776  0088                     l698:
   777                           
   778                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/Osc_config.c: 
      +                          36:             OSCCONbits.IRCF=0b111;
   779  0088  3070               	movlw	112
   780  0089  1683               	bsf	3,5	;RP0=1, select bank1
   781  008A  1303               	bcf	3,6	;RP1=0, select bank1
   782  008B  048F               	iorwf	15,f	;volatile
   783  008C                     l700:
   784                           
   785                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/Osc_config.c: 
      +                          37:             OSCCONbits.SCS=1;
   786  008C  140F               	bsf	15,0	;volatile
   787                           
   788                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/Osc_config.c: 
      +                          38:             break;
   789  008D  28A4               	goto	l92
   790  008E                     l704:
   791  008E  0877               	movf	osc_config@freq,w
   792  008F  00F5               	movwf	??_osc_config
   793  0090  01F6               	clrf	??_osc_config+1
   794                           
   795                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   796                           ; Switch size 1, requested type "simple"
   797                           ; Number of cases is 1, Range of values is 0 to 0
   798                           ; switch strategies available:
   799                           ; Name         Instructions Cycles
   800                           ; simple_byte            4     3 (average)
   801                           ; direct_byte           11     8 (fixed)
   802                           ; jumptable            260     6 (fixed)
   803                           ;	Chosen strategy is simple_byte
   804  0091  0876               	movf	??_osc_config+1,w
   805  0092  3A00               	xorlw	0	; case 0
   806  0093  1903               	skipnz
   807  0094  2896               	goto	l858
   808  0095  28A4               	goto	l92
   809  0096                     l858:
   810                           
   811                           ; Switch size 1, requested type "simple"
   812                           ; Number of cases is 4, Range of values is 1 to 8
   813                           ; switch strategies available:
   814                           ; Name         Instructions Cycles
   815                           ; simple_byte           13     7 (average)
   816                           ; direct_byte           35    11 (fixed)
   817                           ; jumptable            263     9 (fixed)
   818                           ;	Chosen strategy is simple_byte
   819  0096  0875               	movf	??_osc_config,w
   820  0097  3A01               	xorlw	1	; case 1
   821  0098  1903               	skipnz
   822  0099  2870               	goto	l686
   823  009A  3A03               	xorlw	3	; case 2
   824  009B  1903               	skipnz
   825  009C  2878               	goto	l690
   826  009D  3A06               	xorlw	6	; case 4
   827  009E  1903               	skipnz
   828  009F  2880               	goto	l694
   829  00A0  3A0C               	xorlw	12	; case 8
   830  00A1  1903               	skipnz
   831  00A2  2888               	goto	l698
   832  00A3  28A4               	goto	l92
   833  00A4                     l92:
   834  00A4  0008               	return
   835  00A5                     __end_of_osc_config:
   836                           
   837                           	psect	text3
   838  0019                     __ptext3:	
   839 ;; *************** function _isr *****************
   840 ;; Defined at:
   841 ;;		line 60 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMotores.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;		None
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   855 ;;      Params:         0       0       0       0       0
   856 ;;      Locals:         0       0       0       0       0
   857 ;;      Temps:          5       0       0       0       0
   858 ;;      Totals:         5       0       0       0       0
   859 ;;Total ram usage:        5 bytes
   860 ;; Hardware stack levels used: 1
   861 ;; This function calls:
   862 ;;		Nothing
   863 ;; This function is called by:
   864 ;;		Interrupt level 1
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           
   869                           ;psect for function _isr
   870  0019                     _isr:
   871  0019                     i1l744:
   872                           
   873                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 62:     if (INTCONbits.T0IF)
   874  0019  1D0B               	btfss	11,2	;volatile
   875  001A  281C               	goto	u1_21
   876  001B  281D               	goto	u1_20
   877  001C                     u1_21:
   878  001C  284B               	goto	i1l768
   879  001D                     u1_20:
   880  001D                     i1l746:
   881                           
   882                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 63:     {;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.
      +                          X/mainPruebaMotores.c: 64:         if (botonazos==1)
   883  001D  0379               	decf	_botonazos,w
   884  001E  1D03               	btfss	3,2
   885  001F  2821               	goto	u2_21
   886  0020  2822               	goto	u2_20
   887  0021                     u2_21:
   888  0021  2834               	goto	i1l756
   889  0022                     u2_20:
   890  0022                     i1l748:
   891                           
   892                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 65:         {;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_moto
      +                          res.X/mainPruebaMotores.c: 66:             PORTEbits.RE0=1;
   893  0022  1283               	bcf	3,5	;RP0=0, select bank0
   894  0023  1303               	bcf	3,6	;RP1=0, select bank0
   895  0024  1409               	bsf	9,0	;volatile
   896  0025                     i1l750:
   897                           
   898                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 67:             _delay((unsigned long)((2)*(4000000/4000.0)));
   899  0025  3003               	movlw	3
   900  0026  00F1               	movwf	??_isr+1
   901  0027  3097               	movlw	151
   902  0028  00F0               	movwf	??_isr
   903  0029                     u8_27:
   904  0029  0BF0               	decfsz	??_isr,f
   905  002A  2829               	goto	u8_27
   906  002B  0BF1               	decfsz	??_isr+1,f
   907  002C  2829               	goto	u8_27
   908  002D  282E               	nop2
   909  002E                     i1l752:
   910                           
   911                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 68:             PORTEbits.RE0=0;
   912  002E  1283               	bcf	3,5	;RP0=0, select bank0
   913  002F  1303               	bcf	3,6	;RP1=0, select bank0
   914  0030  1009               	bcf	9,0	;volatile
   915                           
   916                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 69:             TMR0 = 70;
   917  0031  3046               	movlw	70
   918  0032  0081               	movwf	1	;volatile
   919  0033                     i1l754:
   920                           
   921                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 70:             INTCONbits.T0IF = 0;
   922  0033  110B               	bcf	11,2	;volatile
   923  0034                     i1l756:
   924                           
   925                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 72:         if (botonazos==2)
   926  0034  3002               	movlw	2
   927  0035  0679               	xorwf	_botonazos,w
   928  0036  1D03               	btfss	3,2
   929  0037  2839               	goto	u3_21
   930  0038  283A               	goto	u3_20
   931  0039                     u3_21:
   932  0039  284A               	goto	i1l766
   933  003A                     u3_20:
   934  003A                     i1l758:
   935                           
   936                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 73:         {;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_moto
      +                          res.X/mainPruebaMotores.c: 74:             PORTEbits.RE0=1;
   937  003A  1283               	bcf	3,5	;RP0=0, select bank0
   938  003B  1303               	bcf	3,6	;RP1=0, select bank0
   939  003C  1409               	bsf	9,0	;volatile
   940  003D                     i1l760:
   941                           
   942                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 75:             _delay((unsigned long)((1.5)*(4000000/4000.0)));
   943  003D  30D6               	movlw	214
   944  003E  00F0               	movwf	??_isr
   945  003F                     u9_27:
   946  003F  2840               	nop2
   947  0040  2841               	nop2
   948  0041  0BF0               	decfsz	??_isr,f
   949  0042  283F               	goto	u9_27
   950  0043  0000               	nop
   951  0044                     i1l762:
   952                           
   953                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 76:             PORTEbits.RE0=0;
   954  0044  1283               	bcf	3,5	;RP0=0, select bank0
   955  0045  1303               	bcf	3,6	;RP1=0, select bank0
   956  0046  1009               	bcf	9,0	;volatile
   957                           
   958                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 77:             TMR0 = 72;
   959  0047  3048               	movlw	72
   960  0048  0081               	movwf	1	;volatile
   961  0049                     i1l764:
   962                           
   963                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 78:             INTCONbits.T0IF=0;
   964  0049  110B               	bcf	11,2	;volatile
   965  004A                     i1l766:
   966                           
   967                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 80:         T0IF=0;
   968  004A  110B               	bcf	11,2	;volatile
   969  004B                     i1l768:
   970                           
   971                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 83:     if (INTCONbits.RBIF)
   972  004B  1C0B               	btfss	11,0	;volatile
   973  004C  284E               	goto	u4_21
   974  004D  284F               	goto	u4_20
   975  004E                     u4_21:
   976  004E  2865               	goto	i1l59
   977  004F                     u4_20:
   978  004F  2855               	goto	i1l776
   979  0050                     i1l772:
   980                           
   981                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 88:                 antirrebote=0;
   982  0050  01FA               	clrf	_antirrebote
   983                           
   984                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 89:                 break;
   985  0051  2864               	goto	i1l57
   986  0052                     i1l58:	
   987                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 90:             case(0b11111101):
   988                           
   989                           
   990                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 91:                 antirrebote=1;
   991  0052  01FA               	clrf	_antirrebote
   992  0053  0AFA               	incf	_antirrebote,f
   993                           
   994                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 92:                 break;
   995  0054  2864               	goto	i1l57
   996  0055                     i1l776:
   997  0055  1283               	bcf	3,5	;RP0=0, select bank0
   998  0056  1303               	bcf	3,6	;RP1=0, select bank0
   999  0057  0806               	movf	6,w	;volatile
  1000  0058  00F0               	movwf	??_isr
  1001  0059  01F1               	clrf	??_isr+1
  1002                           
  1003                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1004                           ; Switch size 1, requested type "simple"
  1005                           ; Number of cases is 1, Range of values is 0 to 0
  1006                           ; switch strategies available:
  1007                           ; Name         Instructions Cycles
  1008                           ; simple_byte            4     3 (average)
  1009                           ; direct_byte           11     8 (fixed)
  1010                           ; jumptable            260     6 (fixed)
  1011                           ;	Chosen strategy is simple_byte
  1012  005A  0871               	movf	??_isr+1,w
  1013  005B  3A00               	xorlw	0	; case 0
  1014  005C  1903               	skipnz
  1015  005D  285F               	goto	i1l860
  1016  005E  2850               	goto	i1l772
  1017  005F                     i1l860:
  1018                           
  1019                           ; Switch size 1, requested type "simple"
  1020                           ; Number of cases is 1, Range of values is 253 to 253
  1021                           ; switch strategies available:
  1022                           ; Name         Instructions Cycles
  1023                           ; simple_byte            4     3 (average)
  1024                           ; direct_byte           14    11 (fixed)
  1025                           ; jumptable            263     9 (fixed)
  1026                           ;	Chosen strategy is simple_byte
  1027  005F  0870               	movf	??_isr,w
  1028  0060  3AFD               	xorlw	253	; case 253
  1029  0061  1903               	skipnz
  1030  0062  2852               	goto	i1l58
  1031  0063  2850               	goto	i1l772
  1032  0064                     i1l57:
  1033                           
  1034                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/pruebaMaster/prueba_motores.X/mainPruebaMoto
      +                          res.c: 94:         INTCONbits.RBIF=0;
  1035  0064  100B               	bcf	11,0	;volatile
  1036  0065                     i1l59:
  1037  0065  0874               	movf	??_isr+4,w
  1038  0066  008A               	movwf	10
  1039  0067  0873               	movf	??_isr+3,w
  1040  0068  0084               	movwf	4
  1041  0069  0E72               	swapf	??_isr+2,w
  1042  006A  0083               	movwf	3
  1043  006B  0EFE               	swapf	btemp,f
  1044  006C  0E7E               	swapf	btemp,w
  1045  006D  0009               	retfie
  1046  006E                     __end_of_isr:
  1047  007E                     btemp	set	126	;btemp
  1048  007E                     wtemp0	set	126
  1049                           
  1050                           	psect	intentry
  1051  0004                     __pintentry:	
  1052                           ;incstack = 0
  1053                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1054                           
  1055  0004                     interrupt_function:
  1056  007E                     saved_w	set	btemp
  1057  0004  00FE               	movwf	btemp
  1058  0005  0E03               	swapf	3,w
  1059  0006  00F2               	movwf	??_isr+2
  1060  0007  0804               	movf	4,w
  1061  0008  00F3               	movwf	??_isr+3
  1062  0009  080A               	movf	10,w
  1063  000A  00F4               	movwf	??_isr+4
  1064  000B  120A  118A  2819   	ljmp	_isr
  1065                           
  1066                           	psect	config
  1067                           
  1068                           ;Config register CONFIG1 @ 0x2007
  1069                           ;	Oscillator Selection bits
  1070                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1071                           ;	Watchdog Timer Enable bit
  1072                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1073                           ;	Power-up Timer Enable bit
  1074                           ;	PWRTE = OFF, PWRT disabled
  1075                           ;	RE3/MCLR pin function select bit
  1076                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1077                           ;	Code Protection bit
  1078                           ;	CP = OFF, Program memory code protection is disabled
  1079                           ;	Data Code Protection bit
  1080                           ;	CPD = OFF, Data memory code protection is disabled
  1081                           ;	Brown Out Reset Selection bits
  1082                           ;	BOREN = OFF, BOR disabled
  1083                           ;	Internal External Switchover bit
  1084                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1085                           ;	Fail-Safe Clock Monitor Enabled bit
  1086                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1087                           ;	Low Voltage Programming Enable bit
  1088                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1089                           ;	In-Circuit Debugger Mode bit
  1090                           ;	DEBUG = 0x1, unprogrammed default
  1091  2007                     	org	8199
  1092  2007  20D4               	dw	8404
  1093                           
  1094                           ;Config register CONFIG2 @ 0x2008
  1095                           ;	Brown-out Reset Selection bit
  1096                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1097                           ;	Flash Program Memory Self Write Enable bits
  1098                           ;	WRT = OFF, Write protection off
  1099  2008                     	org	8200
  1100  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_osc_config

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      15
                                              8 COMMON     1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                         _osc_config
 ---------------------------------------------------------------------------------
 (2) _osc_config                                           3     3      0      15
                                              5 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _osc_config

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Aug 30 19:21:34 2021

                     l72 00CE                       l92 00A4                       u50 00D9  
                     u51 00D8                       u60 00DF                       u61 00DE  
                     u70 00EA                       u71 00E9                      l700 008C  
                    l710 00A5                      l704 008E                      l720 00BC  
                    l712 00A9                      l730 00C7                      l722 00BD  
                    l714 00AD                      l740 00CC                      l732 00C8  
                    l724 00BF                      l716 00B3                      l742 00CD  
                    l734 00C9                      l726 00C3                      l718 00B9  
                    l736 00CA                      l728 00C6                      l690 0078  
                    l738 00CB                      l692 007E                      l684 006F  
                    l694 0080                      l686 0070                      l790 00DF  
                    l696 0086                      l688 0076                      l792 00E3  
                    l784 00CF                      l858 0096                      l698 0088  
                    l794 00E4                      l786 00D4                      l796 00EA  
                    l788 00D9                      l798 00EB                      _isr 0019  
                    fsr0 0004                     ?_isr 0070                     _T0IF 005A  
                   i1l57 0064                     i1l58 0052                     i1l59 0065  
                   _TMR0 0001                     u1_20 001D                     u1_21 001C  
                   u2_20 0022                     u2_21 0021                     u3_20 003A  
                   u3_21 0039                     u4_20 004F                     u4_21 004E  
                   u8_27 0029                     u9_27 003F                     _main 00CF  
                   btemp 007E                     start 000E           osc_config@freq 0077  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l750 0025                    i1l760 003D                    i1l752 002E  
                  i1l744 0019                    i1l762 0044                    i1l754 0033  
                  i1l746 001D                    i1l860 005F                    i1l772 0050  
                  i1l764 0049                    i1l748 0022                    i1l756 0034  
                  i1l758 003A                    i1l766 004A                    i1l776 0055  
                  i1l768 004B                    _PORTB 0006                    _PORTD 0008  
                  _PORTE 0009                    _TRISD 0088                    _setup 00A5  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 00F3                   ??_main 0078  
                 ?_setup 0070                   _ANSELH 0189                   _cuenta 007C  
                 saved_w 007E  __end_of__initialization 0015           __pcstackCOMMON 0070  
          __end_of_setup 00CF           _OPTION_REGbits 0081                  ??_setup 0078  
             __pmaintext 00CF               __pintentry 0004                  __ptext1 00A5  
                __ptext2 006E                  __ptext3 0019             __size_of_isr 0055  
   end_of_initialization 0015               _osc_config 006E                _PORTBbits 0006  
              _PORTEbits 0009                _TRISBbits 0086                _TRISEbits 0089  
           _cuenta_total 007B      start_initialization 0011              __end_of_isr 006E  
            ?_osc_config 0070              __pbssCOMMON 0079                ___latbits 0002  
    __size_of_osc_config 0037                _botonazos 0079           __size_of_setup 002A  
      interrupt_function 0004                 _IOCBbits 0096              _antirrebote 007A  
             _ADCON0bits 001F               _ADCON1bits 009F                 _WPUBbits 0095  
           ??_osc_config 0075            __size_of_main 0024               _INTCONbits 000B  
     __end_of_osc_config 00A5                 intlevel1 0000               _OSCCONbits 008F  
